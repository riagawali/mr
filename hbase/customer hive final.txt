a. Creation of tables in Hive:

$ hive
hive> CREATE TABLE Customer_info (
      Cust_ID INT,
      Cust_Name STRING,
      OrderID INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE;


INSERT INTO TABLE Customer_info
VALUES 
    (1, 'Alice', 1001),
    (2, 'Bob', 1002),
    (3, 'Charlie', 1003),
    (4, 'David', 1004),
    (5, 'Eve', 1005),
    (6, 'Frank', 1006),
    (7, 'Grace', 1007),
    (8, 'Harry', 1008),
    (9, 'Ivy', 1009),
    (10, 'Jack', 1010);


hive> CREATE TABLE order_info (
      OrderID INT,
      ItemID INT,
      Quantity INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE;

INSERT INTO TABLE order_info
VALUES 
    (1001, 101, 5),
    (1002, 102, 10),
    (1003, 103, 2),
    (1004, 104, 7),
    (1005, 105, 3),
    (1006, 106, 8),
    (1007, 107, 6),
    (1008, 108, 4),
    (1009, 109, 9),
    (1010, 110, 12);


hive> CREATE TABLE item_info (
      Item_ID INT,
      Item_Name STRING,
      ItemPrice DOUBLE)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE;

INSERT INTO TABLE item_info
VALUES 
    (101, 'Laptop', 800.50),
    (102, 'Smartphone', 500.25),
    (103, 'Tablet', 300.75),
    (104, 'Headphones', 100.00),
    (105, 'Mouse', 20.99),
    (106, 'Keyboard', 30.49),
    (107, 'Monitor', 250.75),
    (108, 'Printer', 150.00),
    (109, 'Scanner', 200.25),
    (110, 'External Hard Drive', 120.50);



b. Load table with data from local storage in Hive:
Assuming you have data files named customer_info.csv, order_info.csv, and item_info.csv for respective tables, you can load the data as follows:

$ hive
hive> LOAD DATA LOCAL INPATH '/path/to/customer_info.csv' INTO TABLE Customer_info;
hive> LOAD DATA LOCAL INPATH '/path/to/order_info.csv' INTO TABLE order_info;
hive> LOAD DATA LOCAL INPATH '/path/to/item_info.csv' INTO TABLE item_info;


c. Perform Join tables with Hive:

$ hive
hive> CREATE TABLE Combine AS 
SELECT * FROM Customer_info
      JOIN order_info ON Customer_info.OrderID = order_info.OrderID
      JOIN item_info ON order_info.ItemID = item_info.Item_ID;

d. Create an index on Customer Information System in Hive:

$ hive
hive> CREATE INDEX idx_customer_info ON TABLE Customer_info (Cust_ID) AS 'COMPACT' WITH DEFERRED REBUILD;
hive> ALTER INDEX idx_customer_info ON Customer_info REBUILD;


e. Find the total and average sales in Hive:

$ hive
hive> SELECT SUM(ItemPrice * Quantity) AS total_sales, AVG(ItemPrice * Quantity) AS avg_sales
      FROM order_info JOIN item_info ON order_info.ItemID = item_info.Item_ID;


f. Find Order details with maximum cost:

$ hive
hive>SELECT OrderID, ItemID, Quantity, ItemPrice * Quantity AS TotalCost
FROM order_info,item_info
ORDER BY TotalCost DESC
LIMIT 1;




g. Creating an external Hive table to connect to HBase for Customer Information System:

CREATE TABLE IN HBase

$ hbase shell
create 'Customer_info', 'Customer'


$ hive
hive> CREATE EXTERNAL TABLE CustomerInfoHBase (
      Cust_ID INT,
      Cust_Name STRING,
      OrderID INT)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES (
      "hbase.columns.mapping" = ":key,Customer:Cust_Name,Customer:OrderID")
TBLPROPERTIES ("hbase.table.name" = "Customer_info");
(try by AS ad well)

hive> INSERT INTO CustomerInfoHBase SELECT * FROM Combine 


h. Display records of Customer Information Table in Hbase.

$ hbase shell
hbase> scan 'Customer_info';
